{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/guards/auth.guard.ts","webpack:///./src/app/registration/home/home.component.html","webpack:///./src/app/registration/home/home.component.ts","webpack:///./src/app/registration/registration-routing.module.ts","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/registration/registration.module.ts","webpack:///./src/app/registration/shared/config/route.config.ts","webpack:///./src/app/registration/shared/models/register-user.class.ts","webpack:///./src/app/registration/shared/services/registration.service.ts","webpack:///./src/app/registration/success/success.component.html","webpack:///./src/app/registration/success/success.component.ts","webpack:///./src/app/shared/components/combobox/combo-box.component.html","webpack:///./src/app/shared/components/combobox/combo-box.component.ts","webpack:///./src/app/shared/config/route.config.ts","webpack:///./src/app/shared/directives/outside-click.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { APP_ROUTES } from './shared/config/route.config';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: APP_ROUTES.REGISTRATION\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}","<router-outlet></router-outlet>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  ngOninit() {\n    debugger;\n    window.addEventListener(\"message\", this.messageHandler, false);\n  }\n\n  messageHandler(event) {\n    debugger;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RegistrationModule } from './registration/registration.module';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    RegistrationModule,\n    CoreModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\r\nimport { RouterModule, Router } from '@angular/router';\r\n\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\n@NgModule({\r\n    imports: [RouterModule],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [ ],\r\n})\r\nexport class CoreModule {\r\n    constructor(@Optional() @SkipSelf() parent: CoreModule) {\r\n        if (parent) {\r\n            throw new Error(\r\n                'CoreModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: CoreModule,\r\n            providers: [\r\n                AuthGuard\r\n            ]\r\n        };\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { REGISTRATION_ROUTES } from './../../registration/shared/config/route.config';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (route.url[0] && route.url[0].path === REGISTRATION_ROUTES.SUCCESS && !localStorage.getItem(\"email\")) {\r\n            this.router.navigate(['/', REGISTRATION_ROUTES.REGISTRATION, REGISTRATION_ROUTES.HOME]);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}","<div class=\"registration-form-container\">\r\n    <div class=\"form-header\">\r\n        Registration\r\n    </div>\r\n    <div class=\"registration-form\">\r\n        <form #registrationForm=\"ngForm\" (ngSubmit)=\"register()\">\r\n        <div class=\"form-text-field\">\r\n            <input placeholder=\"Name*\" [(ngModel)]=\"registerModel.name\" #name=\"ngModel\" name=\"name\" required>\r\n        </div>\r\n        <div class=\"form-field-error\" *ngIf=\"(name.dirty || name.touched) && name.errors?.required\">Please enter name</div>\r\n        <div class=\"form-text-field\">\r\n            <input placeholder=\"Email*\" #userEmail=\"ngModel\" [(ngModel)]=\"registerModel.email\" name=\"email\" required email>\r\n        </div>\r\n        <div class=\"form-field-error\" *ngIf=\"(userEmail.dirty || userEmail.touched) && userEmail.errors?.email\">Please enter valid email</div>\r\n        <div class=\"form-field-error\" *ngIf=\"(userEmail.dirty || userEmail.touched) && userEmail.errors?.required\">Please enter email</div>\r\n        <div class=\"form-combo-field\">\r\n            <div class=\"game-label\">Pick a game below</div>\r\n            <app-combo-box [selectableFields]=\"selectableFields\" [placeholder]=\"placeholder\" (fieldSelection)=\"gameSelected($event)\" [scrollHeight]=\"scrollHeight\"></app-combo-box>\r\n            <div class=\"selected-fields\">\r\n                The selected games are: {{registerModel.selectedGames}}\r\n            </div>\r\n        </div>\r\n        <div class=\"form-field-error\" *ngIf=\"isGameDropDownTouched && (selectedGamesCount === 0)\">Please select atleast one game</div>\r\n        <div class=\"buttons\">\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"registrationForm.invalid || (selectedGamesCount === 0)\">Submit</button>\r\n        </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { RegisterUser } from './../shared/models/register-user.class';\r\nimport { RegistrationService } from './../shared/services/registration.service';\r\nimport { REGISTRATION_ROUTES } from './../shared/config/route.config';\r\n\r\n@Component({\r\n    selector: 'app-registration-register',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class RegistrationHomeComponent implements OnInit {\r\n    registerModel: RegisterUser = new RegisterUser();\r\n    @ViewChild('registrationForm') registrationForm;\r\n    selectableFields;\r\n    placeholder: string = \"Games\";\r\n    scrollHeight: string = \"160px\"\r\n    selectedGamesCount: number = 0;\r\n    isGameDropDownTouched: boolean = false;\r\n\r\n\r\n    constructor(\r\n        private registrationService: RegistrationService,\r\n        private router: Router\r\n    ) {  }\r\n  \r\n    /**\r\n     * calling api to get list of games for drop down and clear local storage\r\n     */\r\n    ngOnInit() {\r\n      localStorage.clear();\r\n      this.registrationService.getSelectableFields().subscribe(res => {\r\n        this.selectableFields = res['games'];\r\n      });\r\n    }\r\n  \r\n    /**\r\n     * if valid email is entered navigate to success page\r\n     */\r\n    register() {\r\n        if(this.registrationForm.valid) {\r\n            this.router.navigate([`/${REGISTRATION_ROUTES.REGISTRATION}`, REGISTRATION_ROUTES.SUCCESS]);\r\n            localStorage.setItem(\"email\", this.registerModel.email);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * output function emitted for combobox selection\r\n     * @param games array of selected games\r\n     */\r\n    gameSelected(games) {\r\n        this.isGameDropDownTouched = true;\r\n        this.selectedGamesCount = games.length;\r\n        this.registerModel.selectedGames = games.join(',');\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthGuard } from './../core/guards/auth.guard';\r\nimport { REGISTRATION_ROUTES } from './shared/config/route.config';\r\nimport { RegistrationComponent } from './registration.component';\r\nimport { RegistrationHomeComponent } from './home/home.component';\r\nimport { RegistrationSuccessComponent } from './success/success.component';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: REGISTRATION_ROUTES.REGISTRATION,\r\n        component: RegistrationComponent,\r\n        children: [\r\n            {\r\n                path: REGISTRATION_ROUTES.HOME,\r\n                component: RegistrationHomeComponent\r\n            },\r\n            {\r\n                path: REGISTRATION_ROUTES.SUCCESS,\r\n                component: RegistrationSuccessComponent,\r\n                canActivate: [AuthGuard]\r\n            },\r\n            {\r\n                path: '',\r\n                redirectTo: REGISTRATION_ROUTES.HOME,\r\n                pathMatch: 'full'\r\n            },\r\n        ]\r\n        \r\n    }   \r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class RegistrationRoutingModule {\r\n\r\n}","<router-outlet></router-outlet>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-registration',\r\n    templateUrl: './registration.component.html',\r\n    styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent {\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AuthGuard } from './../core/guards/auth.guard';\r\nimport { RegistrationComponent } from './registration.component';\r\nimport { RegistrationHomeComponent } from './home/home.component';\r\nimport { RegistrationSuccessComponent } from './success/success.component';\r\nimport { RegistrationService } from './shared/services/registration.service';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { RegistrationRoutingModule } from './registration-routing.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        HttpClientModule,\r\n        SharedModule,\r\n        RegistrationRoutingModule\r\n    ],\r\n    declarations: [RegistrationComponent, RegistrationHomeComponent ,RegistrationSuccessComponent],\r\n    providers: [RegistrationService]\r\n})\r\nexport class RegistrationModule{ }","export const REGISTRATION_ROUTES = {\r\n    HOME: 'home',\r\n    SUCCESS: 'success',\r\n    REGISTRATION: 'registration'\r\n}","export class RegisterUser {\r\n    constructor(\r\n        public name: string = '',\r\n        public email: string = '',\r\n        public selectedGames: string = ''\r\n    ) {}\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class RegistrationService {    \r\n    constructor(private http: HttpClient) { }\r\n\r\n    getSelectableFields() {\r\n        return this.http.get('assets/games.json');\r\n    }\r\n}","<div class=\"success-container\">\r\n    <div class=\"thanks-quote\">Thanks for registering with us. Further details have been sent to {{email}}</div>\r\n    <div class=\"registration-btn\">\r\n        Go back to <a class=\"register-link\" (click)=\"goToRegistration()\">Registration</a>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { REGISTRATION_ROUTES } from './../shared/config/route.config';\r\n\r\n@Component({\r\n    selector: 'app-registration-success',\r\n    templateUrl: './success.component.html',\r\n    styleUrls: ['./success.component.css']\r\n})\r\nexport class RegistrationSuccessComponent implements OnInit{\r\n    email: string;\r\n    constructor(private router: Router) {}\r\n\r\n    /**\r\n     * get email from local storage in order to show it on success page\r\n     */\r\n    ngOnInit() {\r\n        this.email = localStorage.getItem(\"email\");\r\n    }\r\n\r\n    /**\r\n     * navigate to home and clear localstorage on going back to registration\r\n     */\r\n    goToRegistration() {\r\n        this.router.navigate([`/${REGISTRATION_ROUTES.REGISTRATION}`, REGISTRATION_ROUTES.HOME]).then(() => {\r\n            localStorage.clear();\r\n        })\r\n    }\r\n}","<div class=\"combo-box-container\" (outsideClick)=\"outsideClick()\">\r\n    <div class=\"input-container\">\r\n        <input type=\"text\" placeholder=\"{{lengthPlaceholder ? lengthPlaceholder : placeholder}}\" (click)=\"togglePopup()\" readonly>            \r\n    </div>\r\n    <div class=\"popup\" *ngIf=\"isOptionsVisible\">\r\n        <div class=\"search-box-container\">\r\n            <input type=\"text\" placeholder=\"Search for a {{placeholder | lowercase}}...\" (keyup)=\"searchGame($event.target.value)\">\r\n        </div>\r\n        <div class=\"options-container\" [style.maxHeight]=\"scrollHeight\">\r\n            <div class=\"options\" *ngFor=\"let field of selectableFields\">\r\n                <input type=\"checkbox\" value=\"{{field.value}}\" [checked]=\"field.checked\" (change)=\"onOptionChange($event)\">{{field.label}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-combo-box',\r\n    templateUrl: './combo-box.component.html',\r\n    styleUrls: ['./combo-box.component.css']\r\n})\r\nexport class ComboboxComponent implements OnChanges {\r\n    //array of data in the form {label: \"label\", value: \"value\"}\r\n    @Input() selectableFields;\r\n    //value to be replaced in placeholder of input field\r\n    @Input() placeholder;\r\n    //max height of dropdown\r\n    @Input() scrollHeight;\r\n    //values in array of selected checked boxes\r\n    @Output() fieldSelection = new EventEmitter();\r\n    isOptionsVisible: boolean = false;\r\n    tempSelectableFields;\r\n    gameSelected = [];\r\n    lengthPlaceholder;\r\n\r\n    /**\r\n     * on selectableField change \r\n     * put checked property with value false in each element\r\n     * took temperory variable in order to maintain listing for search text\r\n     * @param changes \r\n     */\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        \r\n        if(changes['selectableFields'].previousValue !== changes['selectableFields'].currentValue) {\r\n            this.selectableFields.forEach(item => {\r\n                item['checked'] = false;\r\n            })\r\n            this.tempSelectableFields = this.selectableFields;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * toggle popup of dropdwon\r\n     */\r\n    togglePopup() {\r\n        this.isOptionsVisible = !this.isOptionsVisible;\r\n    }\r\n\r\n    /**\r\n     * function to filter the options of dropdown based on search text\r\n     * @param searchText text in search box\r\n     */\r\n    searchGame(searchText) {\r\n        this.selectableFields = this.tempSelectableFields;\r\n        if(searchText) {\r\n            searchText = searchText.toLowerCase();\r\n            const filteredGames = this.selectableFields.filter(game => {\r\n                return game.label.toLowerCase().indexOf(searchText) !== -1;\r\n            });\r\n            this.selectableFields = filteredGames;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * on checkbox change\r\n     * update list of game selected\r\n     * update placeholder for input text\r\n     */\r\n    onOptionChange(event) {\r\n        if(event.target.checked) {            \r\n            this.gameSelected.push(event.target.value);\r\n        } else {\r\n            this.gameSelected = this.gameSelected.filter(game => {\r\n                return game != event.target.value;\r\n            });\r\n        }\r\n        const gameSelectionChanged = this.tempSelectableFields.find(item => item.value === event.target.value);\r\n        gameSelectionChanged['checked'] = event.target.checked;\r\n        this.lengthPlaceholder = this.gameSelected.length > 0 ? `${this.gameSelected.length} ${this.placeholder} selected` : null;\r\n        this.fieldSelection.emit(this.gameSelected);\r\n    }\r\n\r\n    /**\r\n     * on outside click of dropdown hide dropdown and reset the dropdown list\r\n     */\r\n    outsideClick() {\r\n        this.isOptionsVisible = false;\r\n        this.selectableFields = this.tempSelectableFields;\r\n    }\r\n}","export const APP_ROUTES = {\r\n    REGISTRATION: 'registration'\r\n}","import { Directive, ElementRef, Output, EventEmitter, HostListener } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[outsideClick]'\r\n})\r\nexport class OutsideClickDirective {\r\n    @Output() outsideClick = new EventEmitter<MouseEvent>();\r\n    constructor(private elementRef: ElementRef) {}\r\n\r\n    /**\r\n     * on outside click of dropdown emit event to close dropdown\r\n     * @param event \r\n     */\r\n    @HostListener('document:click',['$event'])\r\n    public onDocumentClick(event: MouseEvent): void {\r\n        const targetElement = event.target as HTMLElement;        \r\n        if(targetElement && !this.elementRef.nativeElement.contains(targetElement)) {\r\n            this.outsideClick.emit(event);\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ComboboxComponent } from './components/combobox/combo-box.component';\r\nimport { OutsideClickDirective } from './directives/outside-click.directive';\r\n\r\nconst exportModules = [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n];\r\n\r\n@NgModule({\r\n    imports: [...exportModules],\r\n    exports: [...exportModules, ComboboxComponent],\r\n    declarations: [ComboboxComponent, OutsideClickDirective]\r\n})\r\nexport class SharedModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}